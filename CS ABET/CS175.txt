Course Syllabus
CS 175 - Introduction to Computer Science I

Credits: 3									Contact hours: 3
Instructor’s or course coordinator’s name: Dr. Ling Zheng
Required Textbook and Other Materials:
Cay Horstmann, Java Concepts: Early Objects, 8th Edition, 2015
Course Description:
Introduction to the basic concepts of program development in a modern object-oriented language; problem-solving methods and algorithm development; basic data types; language syntax; style and documentation; and coding and testing of programs. 

Prerequisite:	CS-104 	Corequisite: CS-175L
Required or selected elective: Required

Course Goals:
After completing this course, students will be able to:
    • Create simple classes, methods, and programs in an object-oriented language.
    • Correctly use and identify appropriate primitive data types.
    • Use selection and repetition control statements.
    • Be able to explain and demonstrate the concepts of encapsulation and information hiding.
    • Create self-explanatory code through use of comments.

Relationship of course to student outcomes listed in criterion 3:
In this course students are given an opportunity to:
    • Analyze a complex computing problem and to apply principles of computing and other relevant disciplines to identify solutions.
    • Design, implement, and evaluate a computing-based solution to meet a given set of computing requirements in the context of the program's discipline.

Topics Covered:

Using Objects
    • Objects and Classes
    • Variables
    • Calling Methods
    • Constructing Objects
    • Accessor and Mutator Methods
    • The API Documentation
    • Implementing a Test Program
    • Object References
Implementing Classes
    • Instance Variables and Encapsulation
    • Specifying the Public Interface of a Class
    • Providing the Class Implementation
    • Local Variables
    • The this Reference
Fundamental Data Types
    • Numbers
    • Arithmetic
    • Input and Output
    • Strings
Decisions
    • The if Statement
    • Comparing Values
    • Multiple Alternatives
    • Nested Branches
    • Boolean Variables and Operators
Loops
    • The while Loop
    • The for Loop
    • The do Loop
    • Common Loop Algorithms
    • Nested Loops
